<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jee        http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
       http://www.springframework.org/schema/tx         http://www.springframework.org/schema/tx/spring-tx.xsd
       http://cxf.apache.org/jaxws                      http://cxf.apache.org/schemas/jaxws.xsd">


    <context:annotation-config/>
    <context:component-scan base-package="com.accenture.flowershop"/>

    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/flowerShopDS"/>

    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="dataSource" ref="dataSource"/>   <!-- reference to datasource bean-->
        <property name="locations">
            <array><value>dbscripts</value></array>      <!-- scripts location folder -->
        </property>
        <property name="baselineOnMigrate" value="false"/>
        <property name="outOfOrder" value="false"/>
        <property name="sqlMigrationPrefix" value="v"/>
        <property name="sqlMigrationSeparator" value="__"/>
        <property name="placeholderPrefix" value="@{"/>
        <property name="placeholderSuffix" value="}"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list><value>com.accenture.flowershop.backend.entity</value></list>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="ORACLE" />
                <property name="generateDdl" value="false"/>
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!--  XMLConverter  -->
    <bean id="XMLConverter" class="com.accenture.flowershop.backend.services.XMLConverter">
        <property name="marshaller" ref="castorMarshaller" />
        <property name="unmarshaller" ref="castorMarshaller" />
        <property name="path" value="userXML/" />
    </bean>

    <!--  castor  -->
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="mappingLocation"
                  value="classpath:/config/mapping.xml" />
    </bean>

    <!--  Flowers Stock web service  -->
    <bean id="FlowersStockImpl" class="com.accenture.flowershop.webService.FlowersStockWebServiceImpl" />
    <jaxws:endpoint id="FlowersStockWebService" implementor="#FlowersStockImpl" address="/FlowersStockWebService"/>


    <jee:jndi-lookup id="connectionFactory" jndi-name="jms/connectionFactory"/>
    <jee:jndi-lookup id="sendNewUsersXmlQueue" jndi-name="jms/outQueue"/>
    <jee:jndi-lookup id="receiveUserDiscountXmlQueue" jndi-name="jms/inQueue"/>


    <tx:annotation-driven/>

</beans>
